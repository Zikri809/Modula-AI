generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Chats {
  chat_id            String               @id @db.VarChar
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  modified_at        DateTime?            @default(now()) @db.Timestamptz(6)
  uid                String?              @db.VarChar
  chat_title         String?
  users              users?               @relation(fields: [uid], references: [uid], onDelete: Cascade)
  LLM_server_uploads LLM_server_uploads[]
  file_meta_data     file_meta_data[]
  messages           messages[]

  @@index([uid], type: Hash)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model LLM_server_uploads {
  llm_server_upload_id Int      @id @default(autoincrement())
  created_at           DateTime @default(now()) @db.Timestamptz(6)
  expired_at           DateTime @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  file_part            Json?    @db.Json
  chat_id              String   @db.VarChar
  LLM_model            String?
  Chats                Chats    @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade)

  @@index([chat_id], type: Hash)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model file_meta_data {
  file_id          BigInt   @id(map: "file meta data_pkey") @default(autoincrement())
  chat_id          String   @db.VarChar
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  file_name        String
  file_size        Int
  extracted_text   String?
  confidence_level Int?     @db.SmallInt
  message_id       BigInt
  storage_ref      String?
  Chats            Chats    @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade, map: "file meta data_chat_id_fkey")
  messages         messages @relation(fields: [message_id], references: [message_id], onDelete: Cascade, map: "file meta data_message_id_fkey")

  @@index([chat_id], type: Hash)
  @@index([message_id], type: Hash)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model messages {
  message_id      BigInt           @id @default(autoincrement())
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  modified_at     DateTime         @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  chat_id         String           @db.VarChar
  user_prompt     String
  llm_response    String
  prompt_tokens   Int
  response_tokens Int
  total_tokens    Int
  total_cost      Float            @db.Real
  file_meta_data  file_meta_data[]
  Chats           Chats            @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade)

  @@index([chat_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  email              String   @unique @db.VarChar
  plan               plan
  credit_remain      Int
  free_upload_remain Int
  uid                String   @id @db.VarChar
  user_details       String[]
  Chats              Chats[]
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum plan {
  free
  paid
}
